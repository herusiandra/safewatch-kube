apiVersion: v1
kind: PersistentVolume
metadata:
  name: kafka-pv
  namespace: sws-kube
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: standard
  hostPath:
    path: /bitnami/kafka
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-pvc
  namespace: sws-kube
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: sws-kube
spec:
  selector:
    app: kafka
  ports:
    - port: 9092
      targetPort: 9092
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-headless
  namespace: sws-kube
spec:
  clusterIP: None
  selector:
    app: kafka
  ports:
    - port: 9092
      targetPort: 9092
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sws-kafka
  namespace: sws-kube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: bitnami/kafka:3.6.1
          imagePullPolicy: IfNotPresent
          env:
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: zookeeper-headless.sws-kube.svc.cluster.local:2181
            - name: KAFKA_CFG_LISTENERS
              value: PLAINTEXT://:9092
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: PLAINTEXT://kafka.sws-kube.svc.cluster.local:9092
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
            - name: KAFKA_BROKER_ID
              value: "1"
          volumeMounts:
            - name: kafka-storage
              mountPath: /bitnami/kafka
      volumes:
        - name: kafka-storage
          persistentVolumeClaim:
            claimName: kafka-pvc
